name: Java CI/CD with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Running Java ${{ matrix.java }} compile
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '8'
      - name: SetUp NodeJS Environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Configure Maven Dep
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Maven Compile
        run: mvn compile
      - name: Deploy the JAR file to the remote server
        uses: actions/checkout@v2
      - name: Maven Package Jar
        run: mvn -B package --file pom.xml -Dmaven.test.skip=true
      - name: Build React Front End
        run: yarn install && yarn build
        working-directory: react-front-end
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: MovieManageSystem-Jar
          path: target/MovieManageSystem*.jar
      - name: Clean Server Files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            rm -rf /root/action/movie-manage/*
            rm -rf /www/web-root/movie-manage-sys/*
      - name: Copy Jar to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: "target/MovieManageSystem-backEnd-0.0.1-SNAPSHOT.jar"
          target: /root/action/movie-manage
      - name: Copy React Front End to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: "react-front-end/dist/*"
          target: /www/web-root/movie-manage-sys
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            systemctl stop MovieManageSysJar
            systemctl daemon-reload
            systemctl start MovieManageSysJar
            nginx -s reload
